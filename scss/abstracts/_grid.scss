@use "sass:math";
@use './mixins' as *;

$grid-columns: 12;
$grid-gaps: (
  "0": 0,
  "1": 10px,
  "2": 20px,
  "3": 30px,
  "4": 40px,
  "5": 50px,
);
$layout-values: flex-start, flex-end, center, space-between, space-around;

// base layout classes
.container {
  width: 100%;
  max-width: 1442px;
  margin: 0 auto;
  padding: 0 80px;
  box-sizing: border-box;
}
.row {
  display: flex;
  flex-flow: row wrap;
}

// grid gaps
@each $key, $val in $grid-gaps {
  .pl-#{$key} > * {
    padding-left: $val;
  }
  .pt-#{$key} > * {
    padding-top: $val;
  }
  .pr-#{$key} > * {
    padding-right: $val;
  }
  .pb-#{$key} > * {
    padding-bottom: $val;
  }
  .ml-#{$key} > * {
    margin-left: $val;
  }
  .mt-#{$key} > * {
    margin-top: $val;
  }
  .mr-#{$key} > * {
    margin-right: $val;
  }
  .mb-#{$key} > * {
    margin-bottom: $val;
  }
}

// justify content classes
@each $val in $layout-values {
  .justify-#{$val} {
    justify-content: $val;
  }
}

// align item classes
@each $val in $layout-values {
  .align-#{$val} {
    align-items: $val;
  }
}

// col classes
@include xs {
  @for $i from 1 through $grid-columns {
    .col-xs-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include sm {
  @for $i from 1 through $grid-columns {
    .col-sm-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include md {
  @for $i from 1 through $grid-columns {
    .col-md-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include lg {
  @for $i from 1 through $grid-columns {
    .col-lg-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
@include xl {
  @for $i from 1 through $grid-columns {
    .col-xl-#{$i} {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}